- content_for(:head) do
  link rel="canonical" href=root_path

- content_for(:topbar_actions) do
  - if user_signed_in? && !unapproved_count.zero?
    a.mdc-chip.unapproved-chip href=events_path(status: 'unapproved') title='На модерации'
      i.material-icons.mdc-chip__icon.mdc-chip__icon--leading warning
      .mdc-chip__text = "#{unapproved_count}"

  a.material-icons.mdc-top-app-bar__action-item href=new_event_path title='Добавить событие' add

.events-select-menu-wrapper
  #events-select-menu.events-select-menu.mdc-select.mdc-menu-surface--anchor
    input type="hidden" name="enhanced-select" role="button" aria-haspopup="listbox"
    i.mdc-select__dropdown-icon
    .mdc-select__selected-text aria-haspopup="true"
    #events-select-menu-list.mdc-select__menu.mdc-menu.mdc-menu-surface
      ul.mdc-list
        - if filter_params[:status] == 'unapproved'
          li.mdc-list-item.mdc-list-item--selected role="option" data-value='unapproved' data-url=events_path(filter_params.merge(status: 'unapproved')) aria-selected="true" = "На модерации (#{unapproved_count})"
        - else
          - t('events.index.kind_filter').each_pair do |key, title|
            li.mdc-list-item class=('mdc-list-item--selected' if current_filter?(key)) role="option" data-value=key data-url=events_path(filter_params.merge(kind: key)) aria-selected=(current_filter?(key) ? "true" : false)
              = filter_params[:tag] ? "#{title} с тэгом #{filter_params[:tag]}" : title
    / span.mdc-floating-label Select something
    / .mdc-line-ripple

.events-index
  - if @events.present? && filter_params[:status] != 'unapproved'
    .page-header
      .pull-right
        .feed-icons
          a.mdc-icon-button href=events_path(format: :ics) title='Добавить в календарь'
            i.material-icons.mdc-icon-button__icon aria-hidden="true" event_note
          a.mdc-icon-button href=events_path(format: :atom) title='RSS'
            i.material-icons.mdc-icon-button__icon aria-hidden="true" rss_feed

      nav.events-nav
        a.mdc-button href=events_path(filter_params.merge(status: 'future')) class=('mdc-button--outlined' unless filter_params[:status].nil? || filter_params[:status] == 'future')
          span.mdc-button__label = t('.future_events')
        a.mdc-button href=events_path(filter_params.merge(status: 'past')) class=('mdc-button--outlined' unless filter_params[:status] == 'past')
          span.mdc-button__label = t('.past_events')

  - if @events.empty?
    .alert.alert-success
      p Похоже все коллеги устали митапить и хакатонить и сейчас отдыхают.
      p
        'Но вы всегда можете встряхнуть их,
        = link_to 'организовав новую встречу', new_event_path, class: 'alert-link'
        |.
      hr
      p: small
        = mail_to 'events@it52.info', 'Напишите нам', class: 'alert-link'
        ', если хотите, но не знаете как. Мы всегда поможем с организацией. Бесплатно.
  - else
    .events
      = render @events

  // pagination
  .text-center
    == paginate @events.object
